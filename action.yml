# Generate github metadata file action.yml for generating db migrations
name: 'DB Migrations'
description: 'Run DB migrations'
inputs:
  repo-token:
    description: 'Github token'
    required: true
  pr-base-branch:
    description: 'Base branch on which DB migration action is available. You need to raise a PR for this branch as base branch.'
    default: 'master'
  migration-config-file:
    description: 'Migration configuration file'
    default: './db.migration.json'
  approval-teams:
    description: 'List of teams that has authority to approve'
    required: true
  debug:
    description: 'show debug logs (true|false)'
    default: 'false'

branding:
  icon: 'database'
  color: 'purple'
runs:
  using: composite
  steps:
    - name: Fetch PR details
      id: pr_details
      shell: bash
      # if: ${{ !env.ACT }}
      env:
        REPO_TOKEN: ${{ inputs.repo-token }}
      run: |
        PR_DETAILS=$(curl -s -L -H "Authorization: token $REPO_TOKEN" "${{ github.event.issue.pull_request.url }}")
        # echo "PR_DETAILS=$PR_DETAILS" >> $GITHUB_ENV
        echo "::set-output name=head_sha::$(echo "$PR_DETAILS" | jq -r .head.sha)"
        echo "::set-output name=labels::$(echo "$PR_DETAILS" | jq -c .labels)"
    - name: set head branch
      shell: bash
      # if: ${{ !env.ACT }}
      run: |
        echo ${{ steps.pr_details.outputs.head_sha }}
    - name: checkout repo
      uses: actions/checkout@v3
      # if: ${{ !env.ACT }}
      with:
        ref: ${{ steps.pr_details.outputs.head_sha }}
    - name: migration approvals
      shell: bash
      run: node $GITHUB_ACTION_PATH/index.js
      env:
        REPO_TOKEN: ${{ inputs.repo-token }}
        DEBUG: ${{ inputs.debug }}
        # MIGRATION_DB_URL: ${{ inputs.migration-db-url }}
        # MIGRATION_DIR: ${{ inputs.migration-dir }}
        MIGRATION_CONFIG_DIR: ${{ inputs.migration-config-file }}
        APPROVAL_TEAMS: ${{ inputs.approval-teams }}
        PR_BASE_BRANCH: ${{ inputs.pr-base-branch }}
        PR_LABELS: ${{ steps.pr_details.outputs.labels }}
        AWS_ENDPOINT_URL: ${{ coalesce(secrets.AWS_ENDPOINT_URL) }}